{
  "version": 3,
  "sources": ["../../../../src/api/getIgnoreList.ts", "../../../../src/utils/forceUpdateTime.ts"],
  "sourcesContent": ["import { UserIgnoreList } from \"../types\"\nimport { parseText } from \"../utils/api\"\n\ninterface Req {}\n\ninterface Res extends UserIgnoreList {}\n\n/**\n * \u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0441\u043F\u0438\u0441\u043A\u0430 \u0438\u0433\u043D\u043E\u0440\u0438\u0440\u0443\u0435\u043C\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439\n * @returns Promise \u0441 \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u043C \u0438\u0433\u043D\u043E\u0440\u0438\u0440\u0443\u0435\u043C\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439\n */\nexport async function getIgnoreList({}: Req): Promise<Res[]> {\n\tconst result: Res[] = []\n\n\tasync function loadPage(url: string) {\n\t\tconst html = await parseText(url)\n\t\tconst doc = new DOMParser().parseFromString(html, \"text/html\")\n\n\t\tconst userBlocks = doc.querySelectorAll<HTMLElement>(\n\t\t\t\".settings-page__block-splitter[id^='user-']\"\n\t\t)\n\t\tuserBlocks.forEach(block => {\n\t\t\tconst id = parseInt(block.id.replace(\"user-\", \"\"), 10)\n\t\t\tconst nicknameEl = block.querySelector(\".settings-page__ignored-user-info--row.mb4\")\n\t\t\tconst nickname = nicknameEl?.textContent?.trim() ?? \"\"\n\n\t\t\tif (!isNaN(id) && nickname) {\n\t\t\t\tresult.push({ id, nickname })\n\t\t\t}\n\t\t})\n\n\t\treturn doc\n\t}\n\n\t// \u0421\u043D\u0430\u0447\u0430\u043B\u0430 \u0433\u0440\u0443\u0437\u0438\u043C \u043F\u0435\u0440\u0432\u0443\u044E \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443, \u0447\u0442\u043E\u0431\u044B \u0443\u0437\u043D\u0430\u0442\u044C \u043A\u043E\u043B-\u0432\u043E \u0441\u0442\u0440\u0430\u043D\u0438\u0446\n\tconst firstDoc = await loadPage(\"/forum/settings/ignorelist/\")\n\n\tconst paginationLinks = firstDoc.querySelectorAll<HTMLAnchorElement>(\n\t\t\".pagination__link[data-page]\"\n\t)\n\tconst pages = Array.from(paginationLinks)\n\t\t.map(a => parseInt(a.dataset.page || \"0\", 10))\n\t\t.filter(p => !isNaN(p))\n\n\tconst maxPage = pages.length ? Math.max(...pages) : 1\n\n\t// \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043C \u043E\u0441\u0442\u0430\u043B\u044C\u043D\u044B\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B (\u0435\u0441\u043B\u0438 \u0435\u0441\u0442\u044C)\n\tfor (let page = 2; page <= maxPage; page++) {\n\t\tawait loadPage(`/forum/settings/ignorelist/page-${page}`)\n\t}\n\n\t// todo:\n\tlocalStorage.setItem(\"ignorelist\", JSON.stringify(result))\n\n\treturn result\n}\n", "import {extLogger} from \"../logger\";\n\nconst log = new extLogger(\"utils/forceUpdateTime.ts\")\n\n// \u041F\u0440\u0438\u043D\u0443\u0434\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0435 \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u0435 \u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u043D\u0430 \u0441\u0430\u0439\u0442\u0435\nexport function forceUpdateTime(): void {\n\t// \u0418\u0449\u0435\u043C \u0432\u0441\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B \u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0435\n\tconst timeElements = document.querySelectorAll(\"time[data-time]\")\n\n\ttimeElements.forEach(timeElement => {\n\t\tconst timestamp = timeElement.getAttribute(\"data-time\")\n\t\tif (timestamp) {\n\t\t\tconst date = new Date(parseInt(timestamp) * 1000)\n\t\t\tconst now = new Date()\n\t\t\tconst diff = Math.floor((now.getTime() - date.getTime()) / 1000)\n\n\t\t\tlet timeString = \"\"\n\n\t\t\tif (diff < 60) {\n\t\t\t\ttimeString = \"\u0442\u043E\u043B\u044C\u043A\u043E \u0447\u0442\u043E\"\n\t\t\t} else if (diff < 3600) {\n\t\t\t\tconst minutes = Math.floor(diff / 60)\n\t\t\t\ttimeString = `${minutes} \u043C\u0438\u043D. \u043D\u0430\u0437\u0430\u0434`\n\t\t\t} else if (diff < 86400) {\n\t\t\t\tconst hours = Math.floor(diff / 3600)\n\t\t\t\ttimeString = `${hours} \u0447. \u043D\u0430\u0437\u0430\u0434`\n\t\t\t} else if (diff < 2592000) {\n\t\t\t\tconst days = Math.floor(diff / 86400)\n\t\t\t\ttimeString = `${days} \u0434\u043D. \u043D\u0430\u0437\u0430\u0434`\n\t\t\t} else if (diff < 31536000) {\n\t\t\t\tconst months = Math.floor(diff / 2592000)\n\t\t\t\ttimeString = `${months} \u043C\u0435\u0441. \u043D\u0430\u0437\u0430\u0434`\n\t\t\t} else {\n\t\t\t\tconst years = Math.floor(diff / 31536000)\n\t\t\t\ttimeString = `${years} \u043B\u0435\u0442 \u043D\u0430\u0437\u0430\u0434`\n\t\t\t}\n\n\t\t\ttimeElement.textContent = timeString\n\t\t}\n\t})\n}\n"],
  "mappings": ";;;;;;AAWA,eAAsB,cAAc,CAAC,GAAwB;AAC5D,QAAM,SAAgB,CAAC;AAEvB,iBAAe,SAAS,KAAa;AACpC,UAAM,OAAO,MAAM,UAAU,GAAG;AAChC,UAAM,MAAM,IAAI,UAAU,EAAE,gBAAgB,MAAM,WAAW;AAE7D,UAAM,aAAa,IAAI;AAAA,MACtB;AAAA,IACD;AACA,eAAW,QAAQ,WAAS;AAC3B,YAAM,KAAK,SAAS,MAAM,GAAG,QAAQ,SAAS,EAAE,GAAG,EAAE;AACrD,YAAM,aAAa,MAAM,cAAc,4CAA4C;AACnF,YAAM,WAAW,YAAY,aAAa,KAAK,KAAK;AAEpD,UAAI,CAAC,MAAM,EAAE,KAAK,UAAU;AAC3B,eAAO,KAAK,EAAE,IAAI,SAAS,CAAC;AAAA,MAC7B;AAAA,IACD,CAAC;AAED,WAAO;AAAA,EACR;AAGA,QAAM,WAAW,MAAM,SAAS,6BAA6B;AAE7D,QAAM,kBAAkB,SAAS;AAAA,IAChC;AAAA,EACD;AACA,QAAM,QAAQ,MAAM,KAAK,eAAe,EACtC,IAAI,OAAK,SAAS,EAAE,QAAQ,QAAQ,KAAK,EAAE,CAAC,EAC5C,OAAO,OAAK,CAAC,MAAM,CAAC,CAAC;AAEvB,QAAM,UAAU,MAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI;AAGpD,WAAS,OAAO,GAAG,QAAQ,SAAS,QAAQ;AAC3C,UAAM,SAAS,mCAAmC,IAAI,EAAE;AAAA,EACzD;AAGA,eAAa,QAAQ,cAAc,KAAK,UAAU,MAAM,CAAC;AAEzD,SAAO;AACR;;;ACrDA,IAAM,MAAM,IAAI,UAAU,0BAA0B;AAG7C,SAAS,kBAAwB;AAEvC,QAAM,eAAe,SAAS,iBAAiB,iBAAiB;AAEhE,eAAa,QAAQ,iBAAe;AACnC,UAAM,YAAY,YAAY,aAAa,WAAW;AACtD,QAAI,WAAW;AACd,YAAM,OAAO,IAAI,KAAK,SAAS,SAAS,IAAI,GAAI;AAChD,YAAM,MAAM,oBAAI,KAAK;AACrB,YAAM,OAAO,KAAK,OAAO,IAAI,QAAQ,IAAI,KAAK,QAAQ,KAAK,GAAI;AAE/D,UAAI,aAAa;AAEjB,UAAI,OAAO,IAAI;AACd,qBAAa;AAAA,MACd,WAAW,OAAO,MAAM;AACvB,cAAM,UAAU,KAAK,MAAM,OAAO,EAAE;AACpC,qBAAa,GAAG,OAAO;AAAA,MACxB,WAAW,OAAO,OAAO;AACxB,cAAM,QAAQ,KAAK,MAAM,OAAO,IAAI;AACpC,qBAAa,GAAG,KAAK;AAAA,MACtB,WAAW,OAAO,QAAS;AAC1B,cAAM,OAAO,KAAK,MAAM,OAAO,KAAK;AACpC,qBAAa,GAAG,IAAI;AAAA,MACrB,WAAW,OAAO,SAAU;AAC3B,cAAM,SAAS,KAAK,MAAM,OAAO,MAAO;AACxC,qBAAa,GAAG,MAAM;AAAA,MACvB,OAAO;AACN,cAAM,QAAQ,KAAK,MAAM,OAAO,OAAQ;AACxC,qBAAa,GAAG,KAAK;AAAA,MACtB;AAEA,kBAAY,cAAc;AAAA,IAC3B;AAAA,EACD,CAAC;AACF;",
  "names": []
}
