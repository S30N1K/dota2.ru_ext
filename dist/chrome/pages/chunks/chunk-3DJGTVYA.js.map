{
  "version": 3,
  "sources": ["../../../../src/utils/getTinyMCEEditor.ts", "../../../../src/utils/uploadToImgbb.ts", "../../../../src/utils/initTinyMcePlugins.ts"],
  "sourcesContent": ["import {extLogger} from \"../logger\";\n\nconst log = new extLogger(\"utils/getTinyMCEEditor.ts\")\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u043E\u0432 TinyMCE (\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0438 \u0431\u0443\u0434\u0443\u0449\u0438\u0445)\nexport function getTinyMCEEditor(callback: (editor: any) => void): void {\n\t// \u041C\u0430\u0441\u0441\u0438\u0432 \u0434\u043B\u044F \u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u043D\u0430\u0439\u0434\u0435\u043D\u043D\u044B\u0445 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u043E\u0432\n\tconst editors: any[] = []\n\n\t// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u043D\u0430\u0439\u0434\u0435\u043D\u043D\u043E\u0433\u043E \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u0430\n\tconst processEditor = (editor: any) => {\n\t\tif (editor && !editors.includes(editor)) {\n\t\t\teditors.push(editor)\n\n\t\t\tif (editor.initialized) {\n\t\t\t\t// \u0443\u0436\u0435 \u0433\u043E\u0442\u043E\u0432\n\t\t\t\tcallback(editor)\n\t\t\t} else {\n\t\t\t\t// \u0434\u043E\u0436\u0434\u0430\u0442\u044C\u0441\u044F \u0433\u043E\u0442\u043E\u0432\u043D\u043E\u0441\u0442\u0438\n\t\t\t\teditor.on(\"init\", () => {\n\t\t\t\t\tcallback(editor)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t// \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u044B\n\tif (typeof (window as any).tinymce !== \"undefined\" && (window as any).tinymce.editors) {\n\t\t;(window as any).tinymce.editors.forEach(processEditor)\n\t}\n\n\t// \u0421\u043E\u0437\u0434\u0430\u0435\u043C MutationObserver \u0434\u043B\u044F \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u043D\u043E\u0432\u044B\u0445 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u043E\u0432\n\tconst observer = new MutationObserver(mutations => {\n\t\tmutations.forEach(mutation => {\n\t\t\t// \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u043D\u044B\u0435 \u0443\u0437\u043B\u044B\n\t\t\tmutation.addedNodes.forEach(node => {\n\t\t\t\tif (node.nodeType === Node.ELEMENT_NODE) {\n\t\t\t\t\tconst element = node as Element\n\n\t\t\t\t\t// \u0418\u0449\u0435\u043C iframe \u0441 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u043E\u043C TinyMCE\n\t\t\t\t\tconst iframes = element.querySelectorAll(\"iframe\")\n\t\t\t\t\tiframes.forEach(iframe => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst iframeDoc = iframe.contentDocument || iframe.contentWindow?.document\n\t\t\t\t\t\t\tif (iframeDoc && iframeDoc.body) {\n\t\t\t\t\t\t\t\t// \u041F\u0440\u043E\u0432\u0435\u0440\u044F\u0435\u043C, \u0435\u0441\u0442\u044C \u043B\u0438 \u0432 iframe \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440 TinyMCE\n\t\t\t\t\t\t\t\tconst editorElement = iframeDoc.body.querySelector(\"[data-mce-object]\")\n\t\t\t\t\t\t\t\tif (editorElement) {\n\t\t\t\t\t\t\t\t\t// \u041F\u043E\u043B\u0443\u0447\u0430\u0435\u043C \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440 \u043F\u043E ID\n\t\t\t\t\t\t\t\t\tconst editorId = editorElement.getAttribute(\"data-mce-object\")\n\t\t\t\t\t\t\t\t\tif (editorId && typeof (window as any).tinymce !== \"undefined\") {\n\t\t\t\t\t\t\t\t\t\tconst editor = (window as any).tinymce.get(editorId)\n\t\t\t\t\t\t\t\t\t\tif (editor) {\n\t\t\t\t\t\t\t\t\t\t\tprocessEditor(editor)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// \u0418\u0433\u043D\u043E\u0440\u0438\u0440\u0443\u0435\u043C \u043E\u0448\u0438\u0431\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u0430 \u043A iframe\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t})\n\n\t// \u041D\u0430\u0447\u0438\u043D\u0430\u0435\u043C \u043D\u0430\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0437\u0430 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F\u043C\u0438 \u0432 DOM\n\tobserver.observe(document.body, {\n\t\tchildList: true,\n\t\tsubtree: true,\n\t})\n\n\t// \u0422\u0430\u043A\u0436\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C \u0441\u043E\u0431\u044B\u0442\u0438\u044F TinyMCE \u0434\u043B\u044F \u043D\u043E\u0432\u044B\u0445 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u043E\u0432\n\tif (typeof (window as any).tinymce !== \"undefined\") {\n\t\t// \u0421\u043B\u0443\u0448\u0430\u0435\u043C \u0441\u043E\u0431\u044B\u0442\u0438\u0435 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u043D\u043E\u0432\u043E\u0433\u043E \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u0430\n\t\t;(window as any).tinymce.on(\"AddEditor\", (e: any) => {\n\t\t\tif (e.editor) {\n\t\t\t\tprocessEditor(e.editor)\n\t\t\t}\n\t\t})\n\n\t\t// \u0421\u043B\u0443\u0448\u0430\u0435\u043C \u0441\u043E\u0431\u044B\u0442\u0438\u0435 \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u0440\u0435\u0434\u0430\u043A\u0442\u043E\u0440\u0430\n\t\t;(window as any).tinymce.on(\"init\", (e: any) => {\n\t\t\tif (e.target) {\n\t\t\t\tprocessEditor(e.target)\n\t\t\t}\n\t\t})\n\t}\n}\n", "import { extLogger } from \"../logger\"\n\nconst log = new extLogger(\"utils/uploadToImgbb.ts\")\n\nexport async function uploadToImgbb(base64Image: string): Promise<string | null> {\n\tconst formData = new FormData()\n\tformData.append(\"image\", base64Image.split(\",\")[1])\n\n\ttry {\n\t\tconst response = await fetch(\n\t\t\t`https://api.imgbb.com/1/upload?key=05b36feae2ca1f1f63701c921f55e6f0`,\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: formData,\n\t\t\t}\n\t\t)\n\n\t\tconst result = await response.json()\n\t\tif (result.success) {\n\t\t\treturn result.data.url\n\t\t} else {\n\t\t\tlog.error(\"Imgbb upload failed\", result)\n\t\t\treturn null\n\t\t}\n\t} catch (error) {\n\t\tlog.error(\"Upload to imgbb failed:\", error)\n\t\treturn null\n\t}\n}\n", "import { extLogger } from \"../logger\"\nimport { settings } from \"../storage\"\nimport { Smile } from \"../types\"\nimport { getSmileUrl } from \"./getSmileUrl\"\nimport { getTinyMCEEditor } from \"./getTinyMCEEditor\"\nimport { loadVue } from \"./loadVue\"\nimport { uploadToImgbb } from \"./uploadToImgbb\"\nimport newSmilesPanel from \"../vue/newSmilesPanel.vue\"\n\nconst log = new extLogger(\"utils/initTinyMcePlugins.ts\")\n\ndeclare const tinymce: any\n\nexport function initTinyMcePlugins() {\n\tgetTinyMCEEditor(editor => {\n\t\tif (settings.imagePasteByCtrlV) {\n\t\t\teditor.on(\"paste\", (event: ClipboardEvent) => {\n\t\t\t\tconst items = event.clipboardData?.items\n\t\t\t\tif (!items) return\n\n\t\t\t\tfor (const item of Array.from(items)) {\n\t\t\t\t\tif (item.type.includes(\"image\")) {\n\t\t\t\t\t\tconst file = item.getAsFile()\n\t\t\t\t\t\tif (file) {\n\t\t\t\t\t\t\tconst reader = new FileReader()\n\t\t\t\t\t\t\treader.onload = async e => {\n\t\t\t\t\t\t\t\tconst base64 = e.target?.result as string\n\t\t\t\t\t\t\t\tconst url = await uploadToImgbb(base64)\n\t\t\t\t\t\t\t\tif (url) {\n\t\t\t\t\t\t\t\t\teditor.insertContent(`<img src=\"${url}\" alt=\"Image\"/>`)\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlog.error(\"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u043D\u0430 imgbb\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treader.readAsDataURL(file)\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (settings.newSmilesPanel) {\n\t\t\tlet isOpen = false\n\n\t\t\tconst button = editor.container.querySelector('button[aria-label=\"\u0421\u043C\u0430\u0439\u043B\u044B\"]') as HTMLElement\n\t\t\tbutton.addEventListener(\"click\", e => {\n\t\t\t\te.preventDefault()\n\t\t\t\te.stopPropagation()\n\n\t\t\t\tisOpen = !isOpen\n\n\t\t\t\tlet smilesPanel = editor.container?.parentElement?.querySelector(\"#smilesPanel\")\n\n\t\t\t\tif (!smilesPanel) {\n\t\t\t\t\tsmilesPanel = document.createElement(\"div\")\n\t\t\t\t\tsmilesPanel.setAttribute(\"id\", \"smilesPanel\")\n\t\t\t\t\teditor.container?.parentElement?.appendChild(smilesPanel)\n\t\t\t\t\tloadVue(smilesPanel as HTMLElement, newSmilesPanel, {\n\t\t\t\t\t\tonSmile(smile: Smile) {\n\t\t\t\t\t\t\ttinymce.activeEditor.plugins.smileys.insert(smile.title, getSmileUrl(smile))\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tsmilesPanel.classList.add(\"opened\")\n\t\t\t\t} else {\n\t\t\t\t\tsmilesPanel.classList.remove(\"opened\")\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAEA,IAAM,MAAM,IAAI,UAAU,2BAA2B;AAG9C,SAAS,iBAAiB,UAAuC;AAEvE,QAAM,UAAiB,CAAC;AAGxB,QAAM,gBAAgB,CAAC,WAAgB;AACtC,QAAI,UAAU,CAAC,QAAQ,SAAS,MAAM,GAAG;AACxC,cAAQ,KAAK,MAAM;AAEnB,UAAI,OAAO,aAAa;AAEvB,iBAAS,MAAM;AAAA,MAChB,OAAO;AAEN,eAAO,GAAG,QAAQ,MAAM;AACvB,mBAAS,MAAM;AAAA,QAChB,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AAGA,MAAI,OAAQ,OAAe,YAAY,eAAgB,OAAe,QAAQ,SAAS;AACtF;AAAC,IAAC,OAAe,QAAQ,QAAQ,QAAQ,aAAa;AAAA,EACvD;AAGA,QAAM,WAAW,IAAI,iBAAiB,eAAa;AAClD,cAAU,QAAQ,cAAY;AAE7B,eAAS,WAAW,QAAQ,UAAQ;AACnC,YAAI,KAAK,aAAa,KAAK,cAAc;AACxC,gBAAM,UAAU;AAGhB,gBAAM,UAAU,QAAQ,iBAAiB,QAAQ;AACjD,kBAAQ,QAAQ,YAAU;AACzB,gBAAI;AACH,oBAAM,YAAY,OAAO,mBAAmB,OAAO,eAAe;AAClE,kBAAI,aAAa,UAAU,MAAM;AAEhC,sBAAM,gBAAgB,UAAU,KAAK,cAAc,mBAAmB;AACtE,oBAAI,eAAe;AAElB,wBAAM,WAAW,cAAc,aAAa,iBAAiB;AAC7D,sBAAI,YAAY,OAAQ,OAAe,YAAY,aAAa;AAC/D,0BAAM,SAAU,OAAe,QAAQ,IAAI,QAAQ;AACnD,wBAAI,QAAQ;AACX,oCAAc,MAAM;AAAA,oBACrB;AAAA,kBACD;AAAA,gBACD;AAAA,cACD;AAAA,YACD,SAAS,GAAG;AAAA,YAEZ;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAGD,WAAS,QAAQ,SAAS,MAAM;AAAA,IAC/B,WAAW;AAAA,IACX,SAAS;AAAA,EACV,CAAC;AAGD,MAAI,OAAQ,OAAe,YAAY,aAAa;AAEnD;AAAC,IAAC,OAAe,QAAQ,GAAG,aAAa,CAAC,MAAW;AACpD,UAAI,EAAE,QAAQ;AACb,sBAAc,EAAE,MAAM;AAAA,MACvB;AAAA,IACD,CAAC;AAGA,IAAC,OAAe,QAAQ,GAAG,QAAQ,CAAC,MAAW;AAC/C,UAAI,EAAE,QAAQ;AACb,sBAAc,EAAE,MAAM;AAAA,MACvB;AAAA,IACD,CAAC;AAAA,EACF;AACD;;;ACvFA,IAAMA,OAAM,IAAI,UAAU,wBAAwB;AAElD,eAAsB,cAAc,aAA6C;AAChF,QAAM,WAAW,IAAI,SAAS;AAC9B,WAAS,OAAO,SAAS,YAAY,MAAM,GAAG,EAAE,CAAC,CAAC;AAElD,MAAI;AACH,UAAM,WAAW,MAAM;AAAA,MACtB;AAAA,MACA;AAAA,QACC,QAAQ;AAAA,QACR,MAAM;AAAA,MACP;AAAA,IACD;AAEA,UAAM,SAAS,MAAM,SAAS,KAAK;AACnC,QAAI,OAAO,SAAS;AACnB,aAAO,OAAO,KAAK;AAAA,IACpB,OAAO;AACN,MAAAA,KAAI,MAAM,uBAAuB,MAAM;AACvC,aAAO;AAAA,IACR;AAAA,EACD,SAAS,OAAO;AACf,IAAAA,KAAI,MAAM,2BAA2B,KAAK;AAC1C,WAAO;AAAA,EACR;AACD;;;ACnBA,IAAMC,OAAM,IAAI,UAAU,6BAA6B;AAIhD,SAAS,qBAAqB;AACpC,mBAAiB,YAAU;AAC1B,QAAI,SAAS,mBAAmB;AAC/B,aAAO,GAAG,SAAS,CAAC,UAA0B;AAC7C,cAAM,QAAQ,MAAM,eAAe;AACnC,YAAI,CAAC,MAAO;AAEZ,mBAAW,QAAQ,MAAM,KAAK,KAAK,GAAG;AACrC,cAAI,KAAK,KAAK,SAAS,OAAO,GAAG;AAChC,kBAAM,OAAO,KAAK,UAAU;AAC5B,gBAAI,MAAM;AACT,oBAAM,SAAS,IAAI,WAAW;AAC9B,qBAAO,SAAS,OAAM,MAAK;AAC1B,sBAAM,SAAS,EAAE,QAAQ;AACzB,sBAAM,MAAM,MAAM,cAAc,MAAM;AACtC,oBAAI,KAAK;AACR,yBAAO,cAAc,aAAa,GAAG,iBAAiB;AAAA,gBACvD,OAAO;AACN,kBAAAA,KAAI,MAAM,sMAA2C;AAAA,gBACtD;AAAA,cACD;AACA,qBAAO,cAAc,IAAI;AACzB,oBAAM,eAAe;AACrB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,QAAI,SAAS,gBAAgB;AAC5B,UAAI,SAAS;AAEb,YAAM,SAAS,OAAO,UAAU,cAAc,2DAA6B;AAC3E,aAAO,iBAAiB,SAAS,OAAK;AACrC,UAAE,eAAe;AACjB,UAAE,gBAAgB;AAElB,iBAAS,CAAC;AAEV,YAAI,cAAc,OAAO,WAAW,eAAe,cAAc,cAAc;AAE/E,YAAI,CAAC,aAAa;AACjB,wBAAc,SAAS,cAAc,KAAK;AAC1C,sBAAY,aAAa,MAAM,aAAa;AAC5C,iBAAO,WAAW,eAAe,YAAY,WAAW;AACxD,kBAAQ,aAA4B,wBAAgB;AAAA,YACnD,QAAQ,OAAc;AACrB,sBAAQ,aAAa,QAAQ,QAAQ,OAAO,MAAM,OAAO,YAAY,KAAK,CAAC;AAAA,YAC5E;AAAA,UACD,CAAC;AAAA,QACF;AAEA,YAAI,QAAQ;AACX,sBAAY,UAAU,IAAI,QAAQ;AAAA,QACnC,OAAO;AACN,sBAAY,UAAU,OAAO,QAAQ;AAAA,QACtC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD,CAAC;AACF;",
  "names": ["log", "log"]
}
