{
  "version": 3,
  "sources": ["../../src/extension/utils/browser.ts", "../../src/extension/utils/communication.ts", "../../src/logger.ts", "../../src/extension/utils/hotReloadSocket.ts", "../../src/extension/content.ts"],
  "sourcesContent": ["/**\n * \u041B\u0451\u0433\u043A\u0438\u0439, \u043F\u043E\u043B\u043D\u043E\u0441\u0442\u044C\u044E \u0442\u0438\u043F\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u043F\u043E\u043B\u0438\u0444\u0438\u043B\u043B \u0434\u043B\u044F Chrome \u0438 Firefox \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0439\n * \u0420\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0432 background, popup, content scripts\n * \u0411\u0435\u0437\u043E\u043F\u0430\u0441\u0435\u043D \u0434\u043B\u044F injected scripts\n *\n * \u2705 \u041F\u043E\u043B\u043D\u043E\u0441\u0442\u044C\u044E \u0442\u0438\u043F\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0439\n * \u2705 Generics \u0434\u043B\u044F sendMessage \u0438 storage\n * \u2705 \u0411\u0435\u0437 \u0432\u043D\u0435\u0448\u043D\u0438\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0441\u0442\u0435\u0439\n */\n\ndeclare const chrome: any;\n\ntype Message = any;\ntype Sender = chrome.runtime.MessageSender;\ntype SendResponse = (response?: any) => void;\n\ninterface ExecuteScriptResult<T = any> {\n  frameId: number;\n  result: T;\n}\n\n// --- Runtime API ---\ninterface BrowserRuntime {\n  reload(): void;\n  sendMessage<T = any>(message: Message): Promise<T>;\n  onMessage: {\n    addListener(\n      callback: (message: Message, sender: Sender, sendResponse: SendResponse) => boolean | void\n    ): void;\n    removeListener(\n      callback: (message: Message, sender: Sender, sendResponse: SendResponse) => boolean | void\n    ): void;\n  };\n  getURL(path: string): string;\n}\n\n// --- Tabs API ---\ninterface BrowserTabs {\n  sendMessage<T = any>(tabId: number, message: Message): Promise<T>;\n  query(queryInfo?: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]>;\n}\n\n// --- Storage API ---\ninterface BrowserStorageArea {\n  get<T = any>(keys?: string | string[] | object | null): Promise<T>;\n  set(items: Record<string, any>): Promise<void>;\n  remove(keys: string | string[]): Promise<void>;\n  clear(): Promise<void>;\n}\n\ninterface BrowserStorage {\n  local: BrowserStorageArea;\n  sync: BrowserStorageArea;\n}\n\n// --- \u041F\u043E\u043B\u043D\u044B\u0439 \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 ---\ninterface BrowserPolyfill {\n  runtime: BrowserRuntime;\n  tabs: BrowserTabs;\n  storage: BrowserStorage;\n}\n\n// --- \u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u043E\u043A\u0440\u0443\u0436\u0435\u043D\u0438\u044F ---\nconst isExtensionEnv = typeof chrome !== \"undefined\" && !!chrome.runtime;\n\n// --- \u0423\u043D\u0438\u0432\u0435\u0440\u0441\u0430\u043B\u044C\u043D\u044B\u0439 wrapper \u0434\u043B\u044F async chrome API ---\nfunction wrapChromeCallback<T>(\n  fn: (...args: any[]) => void\n): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    try {\n      fn((result: T) => {\n        const err = chrome?.runtime?.lastError;\n        if (err) reject(err);\n        else resolve(result);\n      });\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n// --- Storage wrapper ---\nfunction createStorageArea(area?: any): BrowserStorageArea {\n  return {\n    get<T = any>(keys?: string | string[] | object | null) {\n      if (!area?.get) return Promise.resolve({} as T);\n      return wrapChromeCallback<T>((cb: any) => area.get(keys ?? null, cb));\n    },\n    set(items: Record<string, any>) {\n      if (!area?.set) return Promise.resolve();\n      return wrapChromeCallback<void>((cb: any) => area.set(items, cb));\n    },\n    remove(keys: string | string[]) {\n      if (!area?.remove) return Promise.resolve();\n      return wrapChromeCallback<void>((cb: any) => area.remove(keys, cb));\n    },\n    clear() {\n      if (!area?.clear) return Promise.resolve();\n      return wrapChromeCallback<void>((cb: any) => area.clear(cb));\n    },\n  };\n}\n\nconst browser: BrowserPolyfill = (() => {\n  const runtime = isExtensionEnv ? chrome.runtime : undefined;\n  const tabs = isExtensionEnv ? chrome.tabs : undefined;\n  const storage = isExtensionEnv ? chrome.storage : undefined;\n\n  const runtimeWrapper: BrowserRuntime = {\n    reload: () => runtime?.reload?.(),\n    sendMessage: <T = any>(msg: Message) =>\n      runtime?.sendMessage\n        ? wrapChromeCallback<T>((cb: any) => runtime.sendMessage(msg, cb))\n        : Promise.reject(\"runtime.sendMessage \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D\"),\n    getURL: (path: string) => runtime?.getURL?.(path) ?? path,\n    onMessage: {\n      addListener: (callback) => {\n        runtime?.onMessage?.addListener?.(\n          (msg: Message, sender: Sender, sendResponse: SendResponse) => {\n            try {\n              const result = callback(msg, sender, sendResponse);\n              if (result && typeof (result as any).then === \"function\") {\n                (result as unknown as Promise<any>)\n                  .then((res) => sendResponse(res))\n                  .catch((err) => sendResponse({ error: err?.message ?? String(err) }));\n                return true;\n              }\n              return result;\n            } catch (e) {\n              sendResponse({ error: (e as Error)?.message ?? String(e) });\n              return false;\n            }\n          }\n        );\n      },\n      removeListener: (callback) => runtime?.onMessage?.removeListener?.(callback as any),\n    },\n  };\n\n  const tabsWrapper: BrowserTabs = {\n    sendMessage: (tabId, message) =>\n      tabs?.sendMessage\n        ? wrapChromeCallback((cb: any) => tabs.sendMessage(tabId, message, cb))\n        : Promise.reject(\"tabs.sendMessage \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D\"),\n    query: (queryInfo = {}) =>\n      tabs?.query\n        ? wrapChromeCallback<chrome.tabs.Tab[]>((cb: any) => tabs.query(queryInfo, cb))\n        : Promise.resolve([]),\n  };\n\n  const storageWrapper: BrowserStorage = {\n    local: createStorageArea(storage?.local),\n    sync: createStorageArea(storage?.sync),\n  };\n\n  return { runtime: runtimeWrapper, tabs: tabsWrapper, storage: storageWrapper };\n})();\n\nexport default browser;\n", "import browser from \"./browser\";\n\n// --- \u0422\u0438\u043F\u044B \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u043C\u0435\u0436\u0434\u0443 injected \u0438 content ---\nexport interface InjectedMessage<T = any> {\n  type: string;\n  payload?: T;\n}\n\nexport interface InjectedResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\n// --- \u0422\u0438\u043F\u044B \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u043C\u0435\u0436\u0434\u0443 content \u0438 background ---\nexport interface BackgroundMessage<T = any> {\n  type: \"RELOAD\" | \"GET_DATABASE\" | \"SAVE_DATABASE\" | \"RESET_SETTINGS\";\n  payload?: T;\n}\n\nexport interface BackgroundResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\n// ------------------- INJECTED \u2192 CONTENT -------------------\nexport function sendToContent<TReq = any, TRes = any>(message: InjectedMessage<TReq>): Promise<InjectedResponse<TRes>> {\n  return new Promise((resolve) => {\n    const responseEventType = `FROM_CONTENT_RESPONSE_${message.type}_${Date.now()}`;\n\n    const handler = (event: any) => {\n      if (event.detail?.responseEventType === responseEventType) {\n        window.removeEventListener(\"FROM_CONTENT_SCRIPT\", handler);\n        resolve(event.detail.response as InjectedResponse<TRes>);\n      }\n    };\n    window.addEventListener(\"FROM_CONTENT_SCRIPT\", handler);\n\n    window.dispatchEvent(new CustomEvent(\"TO_CONTENT_SCRIPT\", {\n      detail: { message, responseEventType }\n    }));\n  });\n}\n\n// ------------------- CONTENT \u2192 INJECTED -------------------\nexport function onInjectedMessage(\n  handler: (msg: InjectedMessage, sendResponse: (res: InjectedResponse) => void) => void\n) {\n  window.addEventListener(\"TO_CONTENT_SCRIPT\", (event: any) => {\n    const { message, responseEventType } = event.detail as { message: InjectedMessage; responseEventType: string };\n\n    handler(message, (response) => {\n      window.dispatchEvent(new CustomEvent(\"FROM_CONTENT_SCRIPT\", {\n        detail: { responseEventType, response }\n      }));\n    });\n  });\n}\n\n// ------------------- CONTENT \u2192 BACKGROUND -------------------\nexport async function sendToBackground<TReq = any, TRes = any>(message: BackgroundMessage<TReq>): Promise<BackgroundResponse<TRes>> {\n  try {\n    const response = await browser.runtime.sendMessage<BackgroundResponse<TRes>>(message);\n    return response;\n  } catch (err) {\n    return { success: false, error: (err as Error).message };\n  }\n}\n\n// ------------------- BACKGROUND \u2192 CONTENT -------------------\nexport function onBackgroundMessage(\n  handler: (msg: BackgroundMessage, sender: chrome.runtime.MessageSender) => Promise<BackgroundResponse>\n) {\n  browser.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n    handler(msg as BackgroundMessage, sender)\n      .then(res => sendResponse(res))\n      .catch(err => sendResponse({ success: false, error: (err as Error).message }));\n    return true; // Chrome \u0436\u0434\u0451\u0442 async \u043E\u0442\u0432\u0435\u0442\n  });\n}\n", "/**\n * \u0423\u043D\u0438\u0432\u0435\u0440\u0441\u0430\u043B\u044C\u043D\u044B\u0439 \u043B\u043E\u0433\u0433\u0435\u0440\n * \u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0443\u0440\u043E\u0432\u043D\u0438 \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F:\n *   - \"debug\" \u2192 \u0432\u044B\u0432\u043E\u0434\u0438\u0442 \u0432\u0441\u0451\n *   - \"info\"  \u2192 info, warn, error\n *   - \"warn\"  \u2192 warn, error\n *   - \"error\" \u2192 \u0442\u043E\u043B\u044C\u043A\u043E \u043E\u0448\u0438\u0431\u043A\u0438\n *\n * \u0423\u0440\u043E\u0432\u0435\u043D\u044C \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0437\u0430\u0434\u0430\u0451\u0442\u0441\u044F \u0447\u0435\u0440\u0435\u0437 process.env.LOG_LEVEL \u0438\u043B\u0438 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E \"info\".\n * \u041F\u0440\u0438\u043C\u0435\u0440: process.env.LOG_LEVEL = \"debug\"\n */\n\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error'\n\n// class Logger \u0437\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043E\u0432\u0430\u043D \u043D\u0430 dota2.ru \u0438 \u0435\u0441\u0442\u044C \u043A\u043E\u043D\u0444\u043B\u0438\u043A\u0442\u044B \u0438\u043D\u0442\u0435\u0440\u0435\u0441\u043E\u0432, \u043F\u043E\u044D\u0442\u043E\u043C\u0443 \u0442\u0430\u043A\nexport class extLogger {\n  private prefix: string\n  private level: LogLevel\n\n  constructor(context: string = 'unknown') {\n    this.prefix = context\n\n    const envLevel = (process.env.LOG_LEVEL as LogLevel) || 'info'\n    this.level = envLevel\n\n    this.info('\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043D')\n  }\n\n  private format(level: string, args: unknown[]): unknown[] {\n    const time = new Date().toLocaleTimeString()\n    return [`[${process.env.EXT_NAME}][${this.prefix}][${time}][${level.toUpperCase()}]`, ...args]\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    const order: Record<LogLevel, number> = {\n      debug: 0,\n      info: 1,\n      warn: 2,\n      error: 3,\n    }\n    return order[level] >= order[this.level]\n  }\n\n  debug(...args: unknown[]) {\n    if (!this.shouldLog('debug')) return\n    console.debug(...this.format('debug', args))\n  }\n\n  info(...args: unknown[]) {\n    if (!this.shouldLog('info')) return\n    console.info(...this.format('info', args))\n  }\n\n  warn(...args: unknown[]) {\n    if (!this.shouldLog('warn')) return\n    console.warn(...this.format('warn', args))\n  }\n\n  error(...args: unknown[]) {\n    if (!this.shouldLog('error')) return\n    console.error(...this.format('error', args))\n  }\n}\n", "import { sendToBackground} from \"./communication\";\nimport { extLogger } from \"../../logger\";\n\nconst log = new extLogger(\"extension/utils/hotReloadSocket.ts\")\n\nconst wsPort = process.env.WEBSOCKET_PORT || \"5896\";\nconst RECONNECT_STEP = 5000;       // \u0448\u0430\u0433 \u0443\u0432\u0435\u043B\u0438\u0447\u0435\u043D\u0438\u044F \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B\u0430 \u043F\u0435\u0440\u0435\u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u044F\nconst MAX_RECONNECT_TIME = 60000;  // \u043C\u0430\u043A\u0441. \u0432\u0440\u0435\u043C\u044F \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u044F\nconst INITIAL_RECONNECT_DELAY = 5000;\n\nexport function startHotReloadSocket() {\n    let retryDelay = INITIAL_RECONNECT_DELAY;\n    let totalWaitTime = 0;\n\n    const connect = () => {\n        const ws = new WebSocket(`ws://localhost:${wsPort}`);\n\n        ws.onopen = () => {\n            log.info(\"\u2705 WebSocket-\u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0435 \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E\");\n            retryDelay = INITIAL_RECONNECT_DELAY;\n            totalWaitTime = 0;\n        };\n\n        ws.onerror = (error) => log.error(\"\u274C \u041E\u0448\u0438\u0431\u043A\u0430 WebSocket:\", error);\n\n        ws.onmessage = async (msg) => {\n            log.debug(\"\uD83D\uDCE8 \u041F\u043E\u043B\u0443\u0447\u0435\u043D\u043E \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435 WebSocket:\", msg);\n\n            try {\n                const data = JSON.parse(msg.data);\n\n                if (data.type === \"reload\") {\n                    log.info(\"\u267B\uFE0F \u041A\u043E\u043C\u0430\u043D\u0434\u0430 \u043F\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0438\");\n\n                    const reload = async () => {\n                        await sendToBackground({ type: \"RELOAD\" });\n                        log.info(\"\uD83D\uDD04 \u0421\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435 \u043E \u043F\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u043E, \u043E\u0431\u043D\u043E\u0432\u043B\u044F\u0435\u043C \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443...\");\n                        location.reload();\n                    };\n\n                    if (document.visibilityState === \"visible\" && !document.hidden) {\n                        await reload();\n                    } else {\n                        log.info(\"\u23F8 \u0421\u0442\u0440\u0430\u043D\u0438\u0446\u0430 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u0430, \u0436\u0434\u0451\u043C \u0432\u0438\u0434\u0438\u043C\u043E\u0441\u0442\u0438...\");\n                        await new Promise<void>((resolve) => {\n                            const handleVisibilityChange = () => {\n                                if (document.visibilityState === \"visible\" && !document.hidden) {\n                                    document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n                                    resolve();\n                                }\n                            };\n                            document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n                        });\n                        await reload();\n                    }\n                }\n            } catch (error) {\n                log.error(\"\u041E\u0448\u0438\u0431\u043A\u0430 \u043F\u0440\u0438 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0435 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F WebSocket:\", error);\n            }\n        };\n\n        ws.onclose = (event) => {\n            log.info(`\u26A0\uFE0F WebSocket \u0437\u0430\u043A\u0440\u044B\u0442 (\u043A\u043E\u0434: ${event.code}, \u043F\u0440\u0438\u0447\u0438\u043D\u0430: ${event.reason || \"\u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430\"})`);\n            totalWaitTime += retryDelay;\n\n            if (totalWaitTime >= MAX_RECONNECT_TIME) {\n                log.error(`\u26D4 \u0414\u043E\u0441\u0442\u0438\u0433\u043D\u0443\u0442 \u043B\u0438\u043C\u0438\u0442 \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u044F (${MAX_RECONNECT_TIME / 1000} \u0441\u0435\u043A), \u043F\u0435\u0440\u0435\u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E.`);\n                return;\n            }\n\n            log.info(`\uD83D\uDD01 \u041F\u043E\u0432\u0442\u043E\u0440\u043D\u043E\u0435 \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 ${retryDelay / 1000} \u0441\u0435\u043A...`);\n            setTimeout(() => {\n                retryDelay = Math.min(retryDelay + RECONNECT_STEP, MAX_RECONNECT_TIME);\n                log.info(`\u041F\u043E\u043F\u044B\u0442\u043A\u0430 \u043F\u0435\u0440\u0435\u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u044F (\u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B: ${retryDelay / 1000} \u0441\u0435\u043A)`);\n                connect();\n            }, retryDelay);\n        };\n\n        return ws;\n    };\n\n    // \u041F\u0435\u0440\u0432\u0438\u0447\u043D\u0430\u044F \u043F\u043E\u043F\u044B\u0442\u043A\u0430 \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u044F\n    try {\n        connect();\n    } catch (error) {\n        log.error(\"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u0441\u043E\u0437\u0434\u0430\u0442\u044C \u043D\u0430\u0447\u0430\u043B\u044C\u043D\u043E\u0435 WebSocket-\u0441\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u0438\u0435:\", error);\n        log.info(\"\u041F\u043E\u0432\u0442\u043E\u0440\u043D\u0430\u044F \u043F\u043E\u043F\u044B\u0442\u043A\u0430 \u0447\u0435\u0440\u0435\u0437 5 \u0441\u0435\u043A\u0443\u043D\u0434...\");\n        setTimeout(connect, 5000);\n    }\n}\n", "import { sendToBackground, onInjectedMessage, InjectedMessage } from \"./utils/communication\"\nimport browser from \"./utils/browser\"\nimport { extLogger } from \"../logger\"\nimport type { DatabaseTables } from \"../types\"\nimport { startHotReloadSocket } from \"./utils/hotReloadSocket\"\nconst log = new extLogger(\"extension/content.ts\")\n\n// \u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F \u0432 injected\nfunction sendMessageToInjected<T = any>(message: InjectedMessage<T>) {\n\twindow.dispatchEvent(new CustomEvent(\"FROM_CONTENT_SCRIPT\", { detail: message }))\n}\n\nfunction waitForDOMReady(): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tif (document.readyState === \"loading\") {\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", () => resolve())\n\t\t} else {\n\t\t\tresolve()\n\t\t}\n\t})\n}\n\n// \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u043E\u0442 injected\nonInjectedMessage(async (msg: InjectedMessage, sendResponse) => {\n\tlog.info(\"\u0421\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0435 \u043E\u0442 injected\", msg)\n\n\tswitch (msg.type) {\n\t\tcase \"RESET_SETTINGS\": {\n\t\t\tawait sendToBackground({ type: \"RESET_SETTINGS\" })\n\t\t\tbreak\n\t\t}\n\t\tcase \"SAVE_DATABASE\": {\n\t\t\tconst data = msg.payload as {\n\t\t\t\ttable: string\n\t\t\t\tdata: object\n\t\t\t}\n\t\t\tawait sendToBackground({\n\t\t\t\ttype: \"SAVE_DATABASE\",\n\t\t\t\tpayload: { table: data.table, data: data.data },\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t\tdefault:\n\t\t\tsendResponse({ success: false, error: \"\u041D\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043D\u044B\u0439 \u0442\u0438\u043F \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F\" })\n\t}\n})\n\n// \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043C \u0441\u043A\u0440\u0438\u043F\u0442\u044B\nfunction loadScript(path: string, cb?: () => void) {\n\tconst script = document.createElement(\"script\")\n\tscript.src = browser.runtime.getURL(path)\n\t;(document.head || document.documentElement).appendChild(script)\n\tscript.addEventListener(\"load\", () => {\n\t\tlog.info(`\u0421\u043A\u0440\u0438\u043F\u0442 ${path} \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D`)\n\t\tcb && cb()\n\t\tscript.remove()\n\t})\n}\n\n// \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043C \u0441\u0442\u0438\u043B\u0438\nfunction loadCss(path: string, cb?: () => void) {\n\tconst link = document.createElement(\"link\")\n\tlink.rel = \"stylesheet\"\n\tlink.type = \"text/css\"\n\tlink.href = browser.runtime.getURL(path)\n\tlink.addEventListener(\"load\", () => {\n\t\tlog.info(`\u0421\u0442\u0438\u043B\u044C ${path} \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D`)\n\t\tcb && cb()\n\t})\n\tdocument.head.appendChild(link)\n}\n\nasync function main() {\n\tconst response = await sendToBackground({ type: \"GET_DATABASE\" })\n\tconst { currentUser, chatSettings, settings } = response.data as DatabaseTables\n\n\tawait waitForDOMReady()\n\n\tloadScript(\"injected.js\", () => {\n\t\tsendMessageToInjected({\n\t\t\ttype: \"LOADED\",\n\t\t\tpayload: {\n\t\t\t\textensionUrl: browser.runtime.getURL(\"\"),\n\t\t\t\tdatabase: {\n\t\t\t\t\tcurrentUser,\n\t\t\t\t\tchatSettings,\n\t\t\t\t\tsettings,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t})\n\n\tif (settings.restoreOldDesign) {\n\t\tloadCss(\"style/old.css\")\n\t}\n\n\tif (settings.chatEnabled) {\n\t\tloadCss(\"style/chat.css\")\n\t\tloadCss(\"style/chatInput.css\")\n\t}\n\n\tif (settings.newSmilesPanel || settings.chatEnabled) {\n\t\tloadCss(\"style/newSmilesPanel.css\")\n\t}\n\n\tif (settings.searchUsersHeader) {\n\t\tloadCss(\"style/searchUserHeader.css\")\n\t}\n}\n\nmain().catch(error => log.error(error))\n\nif (process.env.NODE_ENV === \"dev\") {\n\tstartHotReloadSocket()\n}\n"],
  "mappings": "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",
  "names": ["log"]
}
